plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)

    id 'com.github.node-gradle.node'
}

android {
    namespace 'net.arturka.module_pm_mobile'
    compileSdk 34

    defaultConfig {
        applicationId "net.arturka.module_pm_mobile"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.webkit:webkit:1.9.0'

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
}

node {
    // The Node.js project directory location
    // This is where the package.json file and node_modules directory are located
    nodeProjectDir.set(file("${project.projectDir}/../assets_gen"))
}

def buildWeb = tasks.register('build_assets_gen', NpmTask) {
    description = 'Runs npm build'
    args = ['run', 'build']
    doFirst {
        println "Executing `npm run build` in ${project.projectDir}/../assets_gen"
    }

    dependsOn npmInstall
}

def cleanWeb = tasks.register('clean_assets_gen', Delete) {
    description = 'Removes generated assets'

    delete "${project.projectDir}/../assets_gen/dist"
}

def cleanAssets = tasks.register('clean_assets', Delete) {
    description = 'Removes assets from app module'

    delete "${project.projectDir}/src/main/assets/dist"
}

def copyDistToAssets = tasks.register('copy_dist_to_assets', Copy) {
    description = 'Copies assets into app module'

    from "${project.projectDir}/../assets_gen/dist"
    into "${project.projectDir}/src/main/assets/dist"

    dependsOn build_assets_gen
    dependsOn clean_assets
}

tasks.named("preBuild") {
    dependsOn copy_dist_to_assets
}

tasks.named('clean') {
    dependsOn clean_assets_gen
    dependsOn clean_assets
}